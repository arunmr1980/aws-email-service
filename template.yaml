AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  email-service

  Sample SAM Template for email-service

Globals:
  Function:
    Timeout: 15

Resources:

  QueueReaderFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/queue_reader/
      Handler: app.queue_reader_lambda
      Runtime: python3.9
      Events:
        EmailSQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt EmailSqsQueue.Arn
            BatchSize: 10
            FunctionResponseTypes:
              - ReportBatchItemFailures


  EmailSenderFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/email_sender/
      Handler: app.email_sender_lambda
      Runtime: python3.9
      Policies:
        - AmazonSESFullAccess


  EmailSqsQueue:
    Type: AWS::SQS::Queue
    Properties:
      ContentBasedDeduplication: true
      FifoQueue: true
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt EmailSqsDLQ.Arn
        maxReceiveCount: 5


  EmailSqsQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: Allow-SNS-SendMessage
            Effect: Allow
            Principal:
              Service:
                - "sns.amazonaws.com"
            Action:
              - sqs:SendMessage
            Resource: !GetAtt EmailSqsQueue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn:
                  Ref: EmailSNSTopic
      Queues:
        - Ref: EmailSqsQueue


  EmailSqsDLQ:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: true


  EmailSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: "EmailSNSTopic.fifo"
      ContentBasedDeduplication: true
      FifoTopic: true


  EmailQueueToSnsSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt EmailSqsQueue.Arn
      Protocol: sqs
      RawMessageDelivery: true
      TopicArn: !Ref EmailSNSTopic

# Outputs:
#   # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
#   # Find out more about other implicit resources you can reference within SAM
#   # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
#   EmailSenderApi:
#     Description: "API Gateway endpoint URL for Prod stage for Email Sender function"
#     Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
#   EmailSenderFunction:
#     Description: "Send Email Lambda Function ARN"
#     Value: !GetAtt EmailSenderFunction.Arn
#   EmailSenderFunctionIamRole:
#     Description: "Implicit IAM Role created for Hello World function"
#     Value: !GetAtt EmailSenderFunctionRole.Arn
