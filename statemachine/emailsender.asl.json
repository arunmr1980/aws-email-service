{
  "Comment": "Email sender state machine",
  "StartAt": "Init State",
  "States": {

    "Init State":{
      "Type": "Pass",
      "Result": {
        "iteration_max_count": 11
      },
      "ResultPath": "$",
      "Next": "Count Execution"
    },

    "Count Execution": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "${CounterFunctionArn}"
      },
      "Next": "Iteration Count Check"
    },

    "Iteration Count Check": {
      "Type": "Choice",
      "Choices":[
        {
          "Variable":"$.iteration_count",
          "NumericEquals": 1,
          "Next": "Poll SQS Send Emails"
        },
        {
          "Variable":"$.iteration_count",
          "NumericGreaterThanPath": "$.iteration_max_count",
          "Next": "Finish"
        }
      ],
      "Default": "Wait Some Time"
    },

    "Poll SQS Send Emails": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "${EmailSenderFunctionArn}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ],
      "Next": "Count Execution"
    },

    "Wait Some Time":{
      "Type": "Wait",
      "Seconds": 5,
      "Next": "Poll SQS Send Emails"
    },

    "Finish": {
      "Type": "Pass",
      "End": true
    }

  }
}
